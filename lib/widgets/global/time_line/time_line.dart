import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/material.dart';
import 'package:tomiru_social_flutter/widgets/global/buildAvatarWidget.dart';
import 'package:tomiru_social_flutter/widgets/global/time_line/user_input_avatar_field.dart';
import 'package:tomiru_social_flutter/widgets/global/time_line/like_bar.dart';
import 'package:tomiru_social_flutter/util/show_post_comments.dart';
import "../../../features/Profile-social/Screens/Profile_Screen.dart";
import "show_detail_images/image_gallery_screen.dart";
import 'package:tomiru_social_flutter/widgets/global/time_line/bar_under_cmt.dart';


//time line d√πng ·ªü c√°c v·ªã tr√≠ kh√°c nhau nh∆∞ ·ªü trang ch·ªß , b·∫°n b√® , nh√≥m ...
//s·∫Ω c√≥ kh√°c nhau ·ªü tham s·ªë truy·ªÅn v√†o ƒë·ªÉ check xem ng∆∞·ªùi d√πng ƒëang ·ªü page n√†o ƒë·ªÉ call API
class TimeLine extends StatefulWidget {
  const TimeLine({Key? key}) : super(key: key);

  @override
  State<TimeLine> createState() => _TimeLineState();
}

class _TimeLineState extends State<TimeLine> {
  final List<Map<String, dynamic>> demoData = [
    {
      "userName": "Tr∆∞∆°ng Thanh Phong",
      "avatar":
          "https://assets.monica.im/tools-web/static/imageGeneratorFeatureIntro1-AQU1zYPO.webp",
      "content":
          "H√¥m nay, t√¥i mu·ªën chia s·∫ª m·ªôt kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát v·ªõi m·ªçi ng∆∞·ªùi: m·ªôt b·ª©c ·∫£nh ghi l·∫°i kho·∫£nh kh·∫Øc tuy·ªát v·ªùi trong cu·ªôc s·ªëng c·ªßa m√¨nh. üì∏‚ú® D√π l√† m·ªôt kho·∫£nh kh·∫Øc nh·ªè b√© nh∆∞ng n√≥ ƒë√£ mang l·∫°i cho t√¥i ni·ªÅm vui v√† s·ª± h√†i l√≤ng l·ªõn lao. Hy v·ªçng m·ªçi ng∆∞·ªùi c≈©ng c·∫£m th·∫•y nh∆∞ v·∫≠y khi nh√¨n th·∫•y n√≥! üíñüòä #Kho·∫£nhKh·∫Øcƒê√°ngNh·ªõ #ChiaS·∫ªNi·ªÅmVui",
      "images": [
        "https://st3.depositphotos.com/1005145/15351/i/450/depositphotos_153516954-stock-photo-summer-landscape-with-flowers-in.jpg",
        "https://img-cdn.pixlr.com/image-generator/history/65ba5701b4f4f4419f746bc3/806ecb58-167c-4d20-b658-a6a6b2f221e9/medium.webp",
        "https://images.ctfassets.net/hrltx12pl8hq/3Z1N8LpxtXNQhBD5EnIg8X/975e2497dc598bb64fde390592ae1133/spring-images-min.jpg",
        "https://assets.monica.im/tools-web/static/imageGeneratorFeatureIntro1-AQU1zYPO.webp",
        "https://assets.monica.im/tools-web/static/imageGeneratorFeatureIntro1-AQU1zYPO.webp",
        "https://assets.monica.im/tools-web/static/imageGeneratorFeatureIntro1-AQU1zYPO.webp",
      ],
      "like": "321",
      "share": "58",
      "comment": [
        "H√¥m nay, t√¥i mu·ªën chia s·∫ª m·ªôt kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát v·ªõi m·ªçi ng∆∞·ªùi: m·ªôt b·ª©c ·∫£nh ghi l·∫°i kho·∫£nh kh·∫Øc tuy·ªát v·ªùi",
        "xyz",
        '123'
      ],
    },
    {
      "userName": "Test ABC",
      "avatar":
          "https://img-cdn.pixlr.com/image-generator/history/65ba5701b4f4f4419f746bc3/806ecb58-167c-4d20-b658-a6a6b2f221e9/medium.webp",
      "content":
          "H√¥m nay, t√¥i mu·ªën chia s·∫ª m·ªôt kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát v·ªõi m·ªçi ng∆∞·ªùi: m·ªôt b·ª©c ·∫£nh ghi l·∫°i kho·∫£nh kh·∫Øc tuy·ªát v·ªùi trong cu·ªôc s·ªëng c·ªßa m√¨nh. üì∏‚ú® D√π l√† m·ªôt kho·∫£nh kh·∫Øc nh·ªè b√© nh∆∞ng n√≥ ƒë√£ mang l·∫°i cho t√¥i ni·ªÅm vui v√† s·ª± h√†i l√≤ng l·ªõn lao. Hy v·ªçng m·ªçi ng∆∞·ªùi c≈©ng c·∫£m th·∫•y nh∆∞ v·∫≠y khi nh√¨n th·∫•y n√≥! üíñüòä #Kho·∫£nhKh·∫Øcƒê√°ngNh·ªõ #ChiaS·∫ªNi·ªÅmVui",
      "images": [
        "https://st3.depositphotos.com/1005145/15351/i/450/depositphotos_153516954-stock-photo-summer-landscape-with-flowers-in.jpg",
      ],
      "like": "321",
      "share": "58",
      "comment": ["abc", "xyz", '123', '459'],
    },
    {
      "userName": "Nguy·ªÖn ƒê·∫Øc Hi·∫øu",
      "avatar":
          "https://images.ctfassets.net/hrltx12pl8hq/3Z1N8LpxtXNQhBD5EnIg8X/975e2497dc598bb64fde390592ae1133/spring-images-min.jpg",
      "content":
          "H√¥m nay, t√¥i mu·ªën chia s·∫ª m·ªôt kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát v·ªõi m·ªçi ng∆∞·ªùi: m·ªôt b·ª©c ·∫£nh ghi l·∫°i kho·∫£nh kh·∫Øc tuy·ªát v·ªùi trong cu·ªôc s·ªëng c·ªßa m√¨nh. üì∏‚ú® D√π l√† m·ªôt kho·∫£nh kh·∫Øc nh·ªè b√© nh∆∞ng n√≥ ƒë√£ mang l·∫°i cho t√¥i ni·ªÅm vui v√† s·ª± h√†i l√≤ng l·ªõn lao. Hy v·ªçng m·ªçi ng∆∞·ªùi c≈©ng c·∫£m th·∫•y nh∆∞ v·∫≠y khi nh√¨n th·∫•y n√≥! üíñüòä #Kho·∫£nhKh·∫Øcƒê√°ngNh·ªõ #ChiaS·∫ªNi·ªÅmVui",
      "images": [
        "https://st3.depositphotos.com/1005145/15351/i/450/depositphotos_153516954-stock-photo-summer-landscape-with-flowers-in.jpg",
        "https://images.ctfassets.net/hrltx12pl8hq/3Z1N8LpxtXNQhBD5EnIg8X/975e2497dc598bb64fde390592ae1133/spring-images-min.jpg",
      ],
      "like": "322",
      "share": "58",
      "comment": ["abc", "xyz", '123', '459'],
    },
    {
      "userName": "ƒê·∫∑ng Tu·∫•n Anh",
      "avatar":
          "https://images.ctfassets.net/hrltx12pl8hq/3Z1N8LpxtXNQhBD5EnIg8X/975e2497dc598bb64fde390592ae1133/spring-images-min.jpg",
      "content":
          "H√¥m nay, t√¥i mu·ªën chia s·∫ª m·ªôt kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát v·ªõi m·ªçi ng∆∞·ªùi: m·ªôt b·ª©c ·∫£nh ghi l·∫°i kho·∫£nh kh·∫Øc tuy·ªát v·ªùi trong cu·ªôc s·ªëng c·ªßa m√¨nh. üì∏‚ú® D√π l√† m·ªôt kho·∫£nh kh·∫Øc nh·ªè b√© nh∆∞ng n√≥ ƒë√£ mang l·∫°i cho t√¥i ni·ªÅm vui v√† s·ª± h√†i l√≤ng l·ªõn lao. Hy v·ªçng m·ªçi ng∆∞·ªùi c≈©ng c·∫£m th·∫•y nh∆∞ v·∫≠y khi nh√¨n th·∫•y n√≥! üíñüòä #Kho·∫£nhKh·∫Øcƒê√°ngNh·ªõ #ChiaS·∫ªNi·ªÅmVui",
      "images": [
        "https://st3.depositphotos.com/1005145/15351/i/450/depositphotos_153516954-stock-photo-summer-landscape-with-flowers-in.jpg",
        "https://images.ctfassets.net/hrltx12pl8hq/3Z1N8LpxtXNQhBD5EnIg8X/975e2497dc598bb64fde390592ae1133/spring-images-min.jpg",
        "https://st3.depositphotos.com/1005145/15351/i/450/depositphotos_153516954-stock-photo-summer-landscape-with-flowers-in.jpg",
        "https://img-cdn.pixlr.com/image-generator/history/65ba5701b4f4f4419f746bc3/806ecb58-167c-4d20-b658-a6a6b2f221e9/medium.webp",
      ],
      "like": "3222",
      "share": "158",
      "comment": ["b√†i vi·∫øt hay qu√°", "xyz", '123', '459'],
    },
  ];

  Widget build(BuildContext context) {
    return Column(
      children: demoData.map((data) => _buildFeedCard(context, data)).toList(),
    );
  }

  Widget _buildFeedCard(BuildContext context, Map<String, dynamic> data) {
    return Column(
      children: [
        Container(
            color: Colors.white,
            width: MediaQuery.of(context).size.width,
            child: Padding(
                padding: const EdgeInsets.only(left: 15, right: 15),
                child: IntrinsicHeight(
                  child: Column(
                    children: [
                      Row(
                        children: [
                          InkWell(
                            onTap: () {
                              Navigator.push(
                                  context,
                                  MaterialPageRoute(
                                      builder: (context) => ProfileScreen()));
                            },
                            child: BuildAvatarWidget(urlAvatar: data['avatar']),
                          ),
                          const SizedBox(width: 10),
                          Expanded(
                            flex: 2,
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                GestureDetector(
                                  child: Text(data["userName"].toString()),
                                  onTap: () {
                                    Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                            builder: (context) =>
                                                ProfileScreen()));
                                  },
                                ),
                                const Row(
                                  children: [
                                    Text(
                                      'Moi gioi * v·ª´a xong * ',
                                      style: TextStyle(
                                          color: Color(0xff6E7191),
                                          fontSize: 12),
                                    ),
                                    Icon(
                                      Icons.language,
                                      size: 12,
                                    )
                                  ],
                                ),
                              ],
                            ),
                          ),
                          const Expanded(
                              child: Row(
                            children: [
                              Text(
                                'Theo d√µi',
                                style: TextStyle(
                                    color: Color(0xffF6891F), fontSize: 14),
                              ),
                              Icon(
                                Icons.arrow_drop_down_rounded,
                                size: 25,
                                color: Color(0xff6E7191),
                              )
                            ],
                          )),
                        ],
                      ),
                      const SizedBox(height: 10),
                      _buildContent(data['content']),
                      GestureDetector(
                        onTap: () {},
                        child: Container(
                          height: 250,
                          child: _buildImages(data['images']),
                        ),
                      ),
                      Container(
                        width: double.infinity,
                        child: ElevatedButton(
                          onPressed: () {},
                          style: ElevatedButton.styleFrom(
                            backgroundColor: Colors.blue[50], // Button color
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(5.0),
                            ),
                            padding: const EdgeInsets.symmetric(
                                horizontal: 20.0, vertical: 10.0),
                            elevation: 0,
                          ),
                          child: const Text(
                            'G·ª≠i tin nh·∫Øn',
                            style: TextStyle(
                              fontSize: 16.0,
                              fontWeight: FontWeight.bold,
                              color: Colors.blue,
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(height: 5),
                      LikeBar(
                        likeCount: data['like'],
                        shareCount: data['share'],
                        commentCount: data['comment'].length.toString(),
                      ),
                      Padding(
                        padding:
                            const EdgeInsets.only(left: 10, right: 10, top: 10),
                        child: Container(
                          height: 1,
                          color: const Color(0xFFDDDEE6),
                        ),
                      ),
                      _buildComment(context, data),
                      const SizedBox(height: 10),
                      _buildYourComment(),
                      const SizedBox(height: 10),
                    ],
                  ),
                ))),
        const SizedBox(height: 10)
      ],
    );
  }

  Widget _buildComment(BuildContext context, data) {
    return Padding(
      padding: const EdgeInsets.all(10),
      child: Column(
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              GestureDetector(
                onTap: () {
                  print('click');
                },
                child: const Row(
                  children: [
                    Text(
                      'Ph√π h·ª£p nh·∫•t',
                      style: TextStyle(fontWeight: FontWeight.bold),
                    ),
                    Icon(Icons.arrow_drop_down_outlined),
                  ],
                ),
              ),
              GestureDetector(
                onTap: () {
                  showUnderBottomSheet(context, 0);
                },
                child: const Text(
                  'Xem th√™m b√¨nh lu·∫≠n',
                  style: TextStyle(color: Colors.blue),
                ),
              ),
            ],
          ),
          const SizedBox(height: 10),
          Row(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // data['comment'][0].length > 50
              //     ? Positioned(
              //         top: 0,
              //         left: 0,
              //         child: BuildAvatarWidget(
              //           urlAvatar: data['avatar'],
              //           width: 40,
              //           height: 40,
              //         ),
              //       )
              //     :
              BuildAvatarWidget(
                urlAvatar: data['avatar'],
                width: 40,
                height: 40,
              ),
              const SizedBox(width: 10),
              data['comment'][0].length > 50
                  ? Expanded(
                      flex: 8, // Chi·∫øm 85%
                      child: Column(
                        children: [
                          Container(
                            constraints: BoxConstraints(
                              maxWidth: MediaQuery.of(context).size.width,
                            ),
                            padding: const EdgeInsets.only(
                                left: 10, right: 10, bottom: 10),
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(8.0),
                              color: const Color(0xffECECEC),
                            ),
                            child: IntrinsicHeight(
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  const SizedBox(height: 10),
                                  Text(
                                    data['userName'],
                                    style: const TextStyle(
                                      fontWeight: FontWeight.bold,
                                      fontSize: 12,
                                    ),
                                  ),
                                  Text(
                                    data['comment'][0],
                                    softWrap: true,
                                    overflow: TextOverflow.visible,
                                  ),
                                ],
                              ),
                            ),
                          ),
                          CommentBar(likes: int.parse(data['like']), time: '5 gi·ªù')
                        ],
                      ),
                    )
                  : Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Container(
                          constraints: BoxConstraints(
                            maxWidth: MediaQuery.of(context).size.width,
                          ),
                          padding: const EdgeInsets.only(
                              left: 10, right: 10, bottom: 10),
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(8.0),
                            color: const Color(0xffECECEC),
                          ),
                          child: IntrinsicHeight(
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                const SizedBox(height: 10),
                                Text(
                                  data['userName'],
                                  style: const TextStyle(
                                    fontWeight: FontWeight.bold,
                                    fontSize: 12,
                                  ),
                                ),
                                Text(
                                  data['comment'][0],
                                  softWrap: true,
                                  overflow: TextOverflow.visible,
                                ),
                              ],
                            ),
                          ),
                        ),
                        CommentBar(likes: int.parse(data['like']), time: '5 gi·ªù')
                      ],
                    ),
              const Expanded(
                flex: 1, // Chi·∫øm 5%
                child: SizedBox(width: 10),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildYourComment() {
    return const UserInputAvatarField(
        urlAvatar: 'assets/images/mark-zuckerberg.jpg');
  }

  Widget _buildContent(String content) {
    bool isLongText = content.length > 180;
    bool showFullText = false;

    return StatefulBuilder(
      builder: (context, setState) {
        return Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              showFullText || !isLongText
                  ? content
                  : content.substring(0, 180) + "...",
              style: const TextStyle(fontSize: 14),
            ),
            if (isLongText)
              GestureDetector(
                onTap: () {
                  setState(() {
                    showFullText = !showFullText;
                  });
                },
                child: Text(
                  showFullText ? "Thu g·ªçn" : "Xem th√™m",
                  style: const TextStyle(
                    color: Colors.blue,
                    fontSize: 14,
                  ),
                ),
              ),
          ],
        );
      },
    );
  }

/**check box image case 1/2/4/ >4 */
  Widget _buildImages(List<String> images) {
    if (images.isEmpty) {
      return Container();
    } else if (images.length == 1) {
      return GestureDetector(
        onTap: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => ImageGalleryScreen(
                images: images,
                initialIndex: 0,
              ),
            ),
          );
        },
        child: ClipRRect(
          borderRadius: BorderRadius.circular(8.0),
          child: CachedNetworkImage(
            imageUrl: images[0],
            placeholder: (context, url) => const CircularProgressIndicator(),
            errorWidget: (context, url, error) => const Icon(Icons.error),
            fit: BoxFit.cover,
            width: double.infinity,
          ),
        ),
      );
    } else if (images.length == 2) {
      return Row(
        children: images.asMap().entries.map((entry) {
          int index = entry.key;
          String image = entry.value;
          return Expanded(
            child: GestureDetector(
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ImageGalleryScreen(
                      images: images,
                      initialIndex: index,
                    ),
                  ),
                );
              },
              child: Padding(
                padding: const EdgeInsets.all(4.0),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(8.0),
                  child: CachedNetworkImage(
                    imageUrl: image,
                    placeholder: (context, url) =>
                        const CircularProgressIndicator(),
                    errorWidget: (context, url, error) =>
                        const Icon(Icons.error),
                    fit: BoxFit.cover,
                    height: double.infinity,
                  ),
                ),
              ),
            ),
          );
        }).toList(),
      );
    } else if (images.length == 4) {
      return Column(
        children: [
          Expanded(
            flex: 1,
            child: Row(
              children: images.sublist(0, 2).asMap().entries.map((entry) {
                int index = entry.key;
                String image = entry.value;
                return Expanded(
                  child: GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ImageGalleryScreen(
                            images: images,
                            initialIndex: index,
                          ),
                        ),
                      );
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(4.0),
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(8.0),
                        child: CachedNetworkImage(
                          imageUrl: image,
                          placeholder: (context, url) =>
                              const CircularProgressIndicator(),
                          errorWidget: (context, url, error) =>
                              const Icon(Icons.error),
                          fit: BoxFit.cover,
                          height: double.infinity,
                          width: double.infinity,
                        ),
                      ),
                    ),
                  ),
                );
              }).toList(),
            ),
          ),
          Expanded(
            flex: 1,
            child: Row(
              children: images.sublist(2).asMap().entries.map((entry) {
                int index = entry.key + 2;
                String image = entry.value;
                return Expanded(
                  child: GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ImageGalleryScreen(
                            images: images,
                            initialIndex: index,
                          ),
                        ),
                      );
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(4.0),
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(8.0),
                        child: CachedNetworkImage(
                          imageUrl: image,
                          placeholder: (context, url) =>
                              const CircularProgressIndicator(),
                          errorWidget: (context, url, error) =>
                              const Icon(Icons.error),
                          fit: BoxFit.cover,
                          height: double.infinity,
                          width: double.infinity,
                        ),
                      ),
                    ),
                  ),
                );
              }).toList(),
            ),
          ),
        ],
      );
    } else if (images.length >= 5) {
      return Column(
        children: [
          Expanded(
            flex: 2,
            child: GestureDetector(
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ImageGalleryScreen(
                      images: images,
                      initialIndex: 0,
                    ),
                  ),
                );
              },
              child: Padding(
                padding: const EdgeInsets.all(4.0),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(8.0),
                  child: CachedNetworkImage(
                    imageUrl: images[0],
                    placeholder: (context, url) =>
                        const CircularProgressIndicator(),
                    errorWidget: (context, url, error) =>
                        const Icon(Icons.error),
                    fit: BoxFit.cover,
                    width: double.infinity,
                  ),
                ),
              ),
            ),
          ),
          Expanded(
            child: Row(
              children: [
                Expanded(
                  child: GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ImageGalleryScreen(
                            images: images,
                            initialIndex: 1,
                          ),
                        ),
                      );
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(4.0),
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(8.0),
                        child: CachedNetworkImage(
                          imageUrl: images[1],
                          placeholder: (context, url) =>
                              const CircularProgressIndicator(),
                          errorWidget: (context, url, error) =>
                              const Icon(Icons.error),
                          fit: BoxFit.cover,
                        ),
                      ),
                    ),
                  ),
                ),
                Expanded(
                  child: GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ImageGalleryScreen(
                            images: images,
                            initialIndex: 2,
                          ),
                        ),
                      );
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(4.0),
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(8.0),
                        child: CachedNetworkImage(
                          imageUrl: images[2],
                          placeholder: (context, url) =>
                              const CircularProgressIndicator(),
                          errorWidget: (context, url, error) =>
                              const Icon(Icons.error),
                          fit: BoxFit.cover,
                        ),
                      ),
                    ),
                  ),
                ),
                if (images.length > 4)
                  Expanded(
                    child: GestureDetector(
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (context) => ImageGalleryScreen(
                              images: images,
                              initialIndex: 4,
                            ),
                          ),
                        );
                      },
                      child: Padding(
                        padding: const EdgeInsets.all(4.0),
                        child: ClipRRect(
                          borderRadius: BorderRadius.circular(8.0),
                          child: Stack(
                            children: [
                              CachedNetworkImage(
                                imageUrl: images[4],
                                placeholder: (context, url) =>
                                    const CircularProgressIndicator(),
                                errorWidget: (context, url, error) =>
                                    const Icon(Icons.error),
                                fit: BoxFit.cover,
                              ),
                              Container(
                                color: Colors.black.withOpacity(0.5),
                                child: Center(
                                  child: Text(
                                    '+${images.length - 4}',
                                    style: const TextStyle(
                                        color: Colors.white, fontSize: 24),
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
              ],
            ),
          ),
        ],
      );
    } else {
      // case = 3
      return Column(
        children: [
          Expanded(
            flex: 2,
            child: GestureDetector(
              onTap: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => ImageGalleryScreen(
                      images: images,
                      initialIndex: 0,
                    ),
                  ),
                );
              },
              child: Padding(
                padding: const EdgeInsets.all(4.0),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(8.0),
                  child: CachedNetworkImage(
                    imageUrl: images[0],
                    placeholder: (context, url) =>
                        const CircularProgressIndicator(),
                    errorWidget: (context, url, error) =>
                        const Icon(Icons.error),
                    fit: BoxFit.cover,
                    width: double.infinity,
                  ),
                ),
              ),
            ),
          ),
          Expanded(
            child: Row(
              children: images.sublist(1).asMap().entries.map((entry) {
                int index = entry.key + 1;
                String image = entry.value;
                return Expanded(
                  child: GestureDetector(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => ImageGalleryScreen(
                            images: images,
                            initialIndex: index,
                          ),
                        ),
                      );
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(4.0),
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(8.0),
                        child: CachedNetworkImage(
                          imageUrl: image,
                          placeholder: (context, url) =>
                              const CircularProgressIndicator(),
                          errorWidget: (context, url, error) =>
                              const Icon(Icons.error),
                          fit: BoxFit.cover,
                          height: double.infinity,
                          width: double.infinity,
                        ),
                      ),
                    ),
                  ),
                );
              }).toList(),
            ),
          ),
        ],
      );
    }
  }
}
